#summary a command line shell for the Talis Platform

= Introduction =

{{{pynappl}}} includes a simple command-line utility named {{{tshell}}} that allows the user to manually enter and execute  commands against the [http://www.talis.com/platform Talis Platform]. This document provides a brief introduction on how to use the tshell program. 


= Getting Started =

The {{{tshell}} program can be found in the {{{/bin}}} directory of the pynappl distribution. To start using {{{tshell}}} simply type the name of the program in the console:

{{{
> ./tshell
>>>
}}}

The Talis Platform is organised into areas called [http://n2.talis.com/wiki/Store stores] that group together data and services for accessing it. The majority of {{{tshell}}} commands act on a store. You can set the active store with the {{{use}}} command. For example to set the active store to "space" (i.e. http://api.talis.com/stores/space):

{{{
>>> use space
>>>
}}}

= Exploring a Store =

{{{tshell}} provides several utility commands for exploring the data in a store. These can be useful when you are unfamiliar with a store and want to discover what kind of data it contains. For example, you can see a list of the RDF classes used in the store's metabox:

{{{
>>> use space
>>> show classes
0. http://rdfs.org/ns/void#Dataset
1. http://purl.org/net/schemas/space/Discipline
2. http://purl.org/net/schemas/space/Launch
3. http://purl.org/net/schemas/space/LaunchSite
4. http://purl.org/net/schemas/space/MissionRole
5. http://purl.org/net/schemas/space/Mission
6. http://xmlns.com/foaf/0.1/Person
7. http://purl.org/net/schemas/space/Spacecraft
8. http://xmlns.com/foaf/0.1/Image
9. http://purl.org/ontology/po/Episode
>>>
}}}

Once you have a list of classes used in the store you can sample the data in that class using the {{{sample}}} command:

{{{
>>> sample <http://xmlns.com/foaf/0.1/Person>
0. http://nasa.dataincubator.org/person/eugeneandrewcernan
1. http://nasa.dataincubator.org/person/neilaldenarmstrong
2. http://nasa.dataincubator.org/person/donnfultoneisele
3. http://nasa.dataincubator.org/person/leroygordoncooperjr
4. http://nasa.dataincubator.org/person/edgardeanmitchell
5. http://nasa.dataincubator.org/person/charlesmossdukejr
6. http://nasa.dataincubator.org/person/joehenryengle
7. http://nasa.dataincubator.org/person/jackrobertlousma
8. http://nasa.dataincubator.org/person/brucemccandlessii
9. http://nasa.dataincubator.org/person/johnwattsyoung
>>>
}}}

It can be a bit tedious to type out the full URI of a class so {{{tshell}}} lets you use prefixed names like this:

{{{
>>> sample foaf:Person
0. http://nasa.dataincubator.org/person/eugeneandrewcernan
1. http://nasa.dataincubator.org/person/neilaldenarmstrong
2. http://nasa.dataincubator.org/person/donnfultoneisele
3. http://nasa.dataincubator.org/person/leroygordoncooperjr
4. http://nasa.dataincubator.org/person/edgardeanmitchell
5. http://nasa.dataincubator.org/person/charlesmossdukejr
6. http://nasa.dataincubator.org/person/joehenryengle
7. http://nasa.dataincubator.org/person/jackrobertlousma
8. http://nasa.dataincubator.org/person/brucemccandlessii
9. http://nasa.dataincubator.org/person/johnwattsyoung
>>>
}}}

{{{tshell}}} comes with an inbuilt set of prefix mapping. You can see them with the {{{list prefixes}}} command:

{{{
>>> list prefixes
foaf: <http://xmlns.com/foaf/0.1/>
owl: <http://www.w3.org/2002/07/owl#>
xsd: <http://www.w3.org/2001/XMLSchema#>
bibo: <http://purl.org/ontology/bibo/>
rdfs: <http://www.w3.org/2000/01/rdf-schema#>
skos: <http://www.w3.org/2004/02/skos/core#>
void: <http://rdfs.org/ns/void#>
geonames: <http://www.geonames.org/ontology/>
dc: <http://purl.org/dc/elements/1.1/>
rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
rel: <http://purl.org/vocab/relationship/>
dbp: <http://dbpedia.org/resource/>
cs: <http://purl.org/vocab/changeset/schema#>
ov: <http://open.vocab.org/terms/>
dct: <http://purl.org/dc/terms/>
rss: <http://purl.org/rss/1.0/>
geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
dbpo: <http://dbpedia.org/ontology/>
>>>
}}}
